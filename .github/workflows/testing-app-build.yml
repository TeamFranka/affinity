name: Test App Build
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  CAP_PROJECT: affinity-app
  CAP_PATH: affinity

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  release-build:
    # onlyrun when we were successful
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install ionic
        run: npm install @ionic/cli
      - name: Install dependencies
        run: npm install
      - name: Build locally
        run: |
          npm run build -- --prod

        env:
          VUE_APP_DEFAULT_TEAM: "SOME_TEAM"
      - name: Archive /dist
        uses: actions/upload-artifact@v2
        with:
          name: dist-production
          path: |
            dist

  android-app:
    runs-on: ubuntu-latest
    needs: release-build
    environment: android_app
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install capacitor
        run: npm install capacitor
      - name: Download /dist
        uses: actions/download-artifact@v2
        with:
          name: dist-production
          path: dist
      - name: Sync assets
        run: npx ionic capacitor sync --no-build --project ${{ env.CAP_PROJECT }} --verbose android
      - name: Build Android App
        uses: sparkfabrik/android-build-action@v1.0.0
        with:
          project-path: apps/${{ env.CAP_PATH }}/android
          output-path: android-app.apk
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: ./
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      - name: Archive Android App
        uses: actions/upload-artifact@v2
        with:
          name: android-app
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

  ios-app:
    environment: ios_app
    runs-on: macos-latest
    needs: release-build
    steps:
      - uses: actions/checkout@v2
      - name: Download /dist
        uses: actions/download-artifact@v2
        with:
          name: dist-production
          path: dist
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install capacitor
        run: npm install capacitor
      - name: Sync assets
        run: npx ionic capacitor sync --no-build --project ${{ env.CAP_PROJECT }} --verbose ios
      - name: Build iOS App
        uses: yukiarrr/ios-build-action@v1.3.2
        continue-on-error: false
        with:
          project-path: apps/${{ env.CAP_PATH }}/ios/App/App.xcodeproj
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          certificate-password: ${{ secrets.CREDENTIALS_PASSWORD }}
          team-id: ${{ secrets.TEAM_ID }}
          workspace-path: apps/${{ env.CAP_PATH }}/ios/App/App.xcworkspace # optional
          export-method: ad-hoc
          output-path: 'ios-app.ipa'
      - name: Archive iOS App
        uses: actions/upload-artifact@v2
        with:
          name: ios-app
          path: |
            ios-app.ipa
